<!-- ======================================================================
* Author : $Author$
* Version: $Revision: 161 $
* Date   : $Date: 2011-12-17 12:31:23 +0100 (Sat, 17 Dec 2011) $
* Url    : $URL$
======================================================================= -->

<!-- ======================================================================
* Copyright: (C) 2013 Gregor Cramer
======================================================================= -->

<!-- ======================================================================
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
======================================================================= -->

INDEX Square designators (CQL)
INDEX Compound square designators (CQL)#compound

TITLE CQL - Square designators

<h2>Square designators</h2>

<p>
A square designator defines a set of squares.
</p>

<p>
An empty square designator denotes all 64 squares of the board. For example:
the piece designator <expr>&R;</expr> has an empty square designator. Hence,
this piece designator denotes a white rook anywhere on the board.
</p>

<p>
A simple square designator comprises two characters, the first of which is
a file, and the second a rank, in the usual chess notation. If the file
character is <expr>?</expr> then files a through h are designated. If the
rank character is <expr>?</expr> then ranks 1 through 8 are designated.
For example: the piece designator <expr>&b;b3</expr> has a simple square
designator denoting the square b3, and denotes a black bishop on b3.
</p>

<p>
There is also a special square designator (not belonging to the CQL standard):
<expr>&L;</expr> as character for the files is designating all light-squared
fields on the files a through h. Accordingly <expr>&D;</expr> is designating
all dark-squared fields on these lines. <expr>&L;</expr> and <expr>&D;</expr>
can also be used for the designation of the ranks. But it is not allowed to use
this special square designator both for lines and ranks, this means for example
that <expr>&D;&D;</expr> is not allowed.
</p>

<h2 id="compound">Compound square designators</h2>

<p>
A compound square designator can denote more than one square. One type of
compound square designator comprises a file designator followed by a rank
designator. A file designator comprises either the name of a file or the
names of two files separated by hyphens. A rank designator comprises either
the name of a rank or the name of two ranks separated by hyphens. A
three-character file designator denotes all the files inclusive between the
files designated by its first and last characters. A three-character rank
designator denotes all the ranks inclusive between the ranks designated by
its first and last characters. A compound square designator can also comprise
a sequence of square designators separated by commas. The set of squares so
represented is the union of the sets of squares represented by each of the
constituent square designators.
</p>

<p>
Any compound square designator not contained in brackets must be contained in brackets.
</p>

<p>
%::mc::VariantName(DropChess)%, and %::mc::VariantName(Bughouse)%:
a further special square designator exists (not belonging to CQL standard);
the backhand &ndash; the place of the captured pieces &ndash; will be designated
with <expr>[+]</expr>. Note that the designation <expr>??</expr>, as well as the
empty square designator, does not include the backhand. To designate all squares
inclusive the backhand the shortcut <expr>[*]</expr> is allowed. The notation with
backhand is also possible in other chess variants, in this way a skript can be
written for all chess variants altogether.
</p>

<h3>Examples of compound square designators</h3>

<table class="stripes">
  <tr valign="top" class="stripes">
    <td class="left"><expr>[a-c1]</expr></td>
    <td class="right">denotes the three squares a1, b1, and c1.</td>
  </tr>
  <tr valign="top">
    <td class="left"><expr>[b3-5]</expr></td>
    <td class="right">denotes the squares b3, b4, and b5.</td>
  </tr>
  <tr valign="top" class="stripes">
    <td class="left"><expr>[f-h6-8]</expr></td>
    <td class="right">denotes the squares f6, f7, f8, g6, g7, g8, h6, h7, and h8.</td>
  </tr>
  <tr valign="top">
    <td class="left"><expr>[a1,c4]</expr></td>
    <td class="right">denotes the squares a1 and c4.</td>
  </tr>
  <tr valign="top" class="stripes">
    <td class="left"><expr>[a-h1-2,a8,h8]</expr></td>
    <td class="right">denotes the first two ranks plus a8 and h8.</td>
  </tr>
  <tr valign="top">
    <td class="left"><expr>[&L;?]</expr></td>
    <td class="right">denotes all light-squares fields.</td>
  </tr>
  <tr valign="top" class="stripes">
    <td class="left"><expr>[&D;1]</expr></td>
    <td class="right">denotes all dark-squares fields on the first rank.</td>
  </tr>
  <tr valign="top">
    <td class="left"><expr>[+]</expr></td>
     <td class="right">denotes the backhand
       (%::mc::VariantName(DropChess)%, %::mc::VariantName(Bughouse)%).</td>
  </tr>
  <tr valign="top" class="stripes">
    <td class="left"><expr>[+,a1]</expr></td>
     <td class="right">denotes the backhand and square a1
       (%::mc::VariantName(DropChess)%, %::mc::VariantName(Bughouse)%).</td>
  </tr>
  <tr valign="top">
    <td class="left"><expr>[*]</expr></td>
     <td class="right">denotes alle squares inclusive the backhand
       (%::mc::VariantName(DropChess)%, %::mc::VariantName(Bughouse)%).</td>
  </tr>
  <tr valign="top" class="stripes">
    <td class="left"><expr>[&thinsp;]</expr></td>
    <td class="right">denotes no squares at all. This is very different from the empty
        square designator, which designates all squares.</td>
  </tr>
</table>

<h3>Examples of piece designators</h3>

<table class="stripes">
  <tr valign="top" class="stripes">
    <td class="left"><expr>&I;a1</expr></td>
    <td class="right">
      denotes a white minor piece on a1. It will match any position
      with a white bishop or white knight on a1.
    </td>
  </tr>
  <tr valign="top">
    <td class="left"><expr>&R;[a-h1-2]</expr></td>
    <td class="right">
      will match any position with a white rook on the first two ranks.
    </td>
  </tr>
  <tr valign="top" class="stripes">
    <td class="left"><expr>[&A;&r;][a-h1-2,a8,h8]</expr></td>
    <td class="right">
      will match any position that has a white piece or a black rook on
      the first two ranks or the corners.
    </td>
  </tr>
  <tr valign="top">
    <td class="left"><expr>[&R;&B;&N;&Q;&P;][a1,h1,a8,h8]</expr></td>
    <td class="right">
      will match any position with a white non-king piece at the corners.
    </td>
  </tr>
  <tr valign="top" class="stripes">
    <td class="left"><expr>[&B;&b;]&L;?</expr></td>
    <td class="right">
      will match any positions with a light-squares bishop.
    </td>
  </tr>
  <tr valign="top">
    <td class="left"><expr>&N;[+]</expr></td>
    <td class="right">
      denotes a white knight in the backhand
      (%::mc::VariantName(DropChess)%, %::mc::VariantName(Bughouse)%).
    </td>
  </tr>
  <tr valign="top" class="stripes">
    <td class="left"><expr>&B;[&thinsp;]</expr></td>
    <td class="right">
      denotes a white bishop on an empty set of squares. This can never match
      any position of course.
    </td>
  </tr>
</table>

END

<!-- vi:set ts=2 sw=2 et filetype=html: -->
