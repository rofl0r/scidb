<!-- ======================================================================
* Author : $Author$
* Version: $Revision: 161 $
* Date   : $Date: 2011-12-17 12:31:23 +0100 (Sat, 17 Dec 2011) $
* Url    : $URL$
======================================================================= -->

<!-- ======================================================================
* Copyright: (C) 2013 Gregor Cramer
======================================================================= -->

<!-- ======================================================================
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
======================================================================= -->

INDEX Tagging (CQL)
INDEX CQL Tagging

TITLE CQL - Tagging

<p>
It is possible to track the identity of a particular piece. Each piece
in the initial position of the game is assigned a unique nonnegative
integer, called its mark. Promotion does not change the mark of a piece.
A tag is a named mark. We say that a tag is bound to the value of a mark.
A tag represents the particular piece whose mark equals the mark of the
tag.
</p>

<ul>
  <li><a href="#forany">:forany in the match list</a></li>
  <li><a href="#tagmatch">:tagmatch in the position list</a></li>
  <li><a href="#designators">Piece designators and tags</a></li>
  <li><a href="#examples">Longer examples</a></li>
</ul>

<h2 id="forany">:forany in the match list</h2>

<p>
A tag is defined via the <cql>:forany</cql> keyword in a match list.
The <cql>:forany</cql> keyword takes two parameters: the alphanumeric
name of a tag and a piece designator.
</p>

<p>
The match filter is then conceptually run once in which each tag is bound
to each possible mark, such that two conditions hold:
</p>

<ul style="padding: 0;">
  <li class="space">
    No two tags may be bound to the same mark.
  </li>
  <li class="space">
    A tag may only be bound to a mark that represents a piece that either
    matches, or eventually matches, the piece designator associated with that
    tag. Square information associated with that piece designator is ignored. 
  </li>
</ul>

<p>
At most two tags may be contained inside a match list. Tags may not be used
in a matchlist if a <cql>position:relation</cql> occurs in a position list
inside that match list.
</p>

<h2 id="tagmatch">:tagmatch in the position list</h2>

<p>
A <cql>:tagmatch</cql> keyword in a position list takes two parameters, the
name of a tag and a piece designator. The position list match fails on the
current position if the piece and square corresponding to the mark of the tag
does not match the given piece designator.
</p>

<p>
For example, assuming there is a
tag named "foo", this position will only match if "foo" is a white pawn:
</p>

<verb>
(position <keyword>relation:tagmatch</keyword> foo &P;)
</verb>

<h2 id="designators">Piece designators and tags</h2>

<p>
A piece designator can have a piecetype designator that is the name of a tag
preceded by the character '$'. Such a piecetype represents the particular
piece represented by the named tag. Because tag names are alphanumeric, square
designators in such a piece designator must be enclosed in brackets. Example:
</p>

<verb>
(position $foo[a1])
</verb>

<p>
The piece represented by the tag named "foo" must be on a1.
</p>

<h2 id="examples">Longer examples</h2>

<p>
For longer examples see:
<a href="CQL-Examples.html#tagging">Examples for tagging</a>.
</p>

END

<!-- vi:set ts=2 sw=2 et filetype=html: -->
