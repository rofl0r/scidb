#!/bin/sh
#
# Usage: make_html pattern.txt filename.txt > filename.html
# \
exec tclsh "$0" "$@"

# read .txt file ###########################

set filename [lindex $argv 1]
set fd [open $filename]
set section ""
chan configure $fd -encoding iso8859-1

array set content {
  CONTENT     ""
  FOOTER      ""
  ONLOAD      ""
  SIDEBAR     ""
  STYLES      ""
  TITLE       ""
  TRANSLATE   "Translate"
  TRANSLATOR  ""

  SCRIPTS     {<script type="text/javascript" src="js/cookies.js"></script>
  }
  AUTODISPLAY false
}

set content(FILENAME)   [lindex [split $filename "."] 0]
set content(ENGLISH)    "%%../$content(FILENAME).html"
set content(GERMAN)     "%%$content(FILENAME).html"
set content(JSREQUIRED) "Javascript required"

while {[gets $fd line] >= 0} {
  if {[string index $line 0] ne "#"} {
    switch -- $line {
      CONTENT - FOOTER - ONLOAD - SCRIPTS - SIDEBAR - STYLES - TITLE { set section $line }

      default {
        if {[string length [string trim $line]] > 0} {
          append content($section) $line "\n"
        }
      }
    }
  }
}

if {$filename ne "screenshots.txt"} {
  set content(TRANSLATOR) {
    <div id="translator" class="block">
      <ul class="header">
        <li class="header">%TRANSLATE%</li>
      </ul>
      <ul class="body">
        <li class="tiny-notes">
          <noscript>(%JSREQUIRED%)</noscript>
          <div id="google_translate_element" lang="%LANG%"></div>
          <script type="text/javascript">
            function googleTranslateElementInit()
            {
              new google.translate.TranslateElement(
                {
                  pageLanguage: '%LANG%',
                  autoDisplay: %AUTODISPLAY%,
                  multilanguagePage: true,
                  layout: google.translate.TranslateElement.InlineLayout.SIMPLE
                },
                'google_translate_element');
            }
          </script>
          <script src="http://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit" type="text/javascript">
        </script>
        </li>
      </ul>
    </div>
  }
}

close $fd
set subdir 1

if {[string match */de [pwd]]} {
# G E R M A N ##############################

  set content(LANG)                 "de"
  set content(TRANSLATE)            "Übersetzen"
  set content(JSREQUIRED)           "Javascript erforderlich"

  set content(REVIEW)               "Ein Review abgeben"
  set content(GUESTBOOK)            "Ins Gästebuch eintragen"
  set content(FEATUREREQUEST)       "Einen Funktionswunsch eintragen"
  set content(SUBSCRIBE)            "Diese Seite subskribieren"

  set content(SOURCEFORGE)          "Scidb auf SourceForge.net"

  set content(GUIDE_DOWNLOAD)       "Download"
  set content(GUIDE_SCREENSHOTS)    "Screenshots"
  set content(GUIDE_MOREINFO)       "Weitere Informationen"
  set content(GUIDE_LINKS)          "Scidb-Links"
  set content(GUIDE_WANTED)         "Gesucht"
  set content(GUIDE_PROJECT)        "Das Scidb-Projekt"
  set content(GUIDE_RELEASEHISTORY) "Freigabehistorie"
  set content(GUIDE_ROADMAP)        "Roadmap"

############################################
} else {
# E N G L I S H ############################

  set content(LANG)                 "en"

  set content(REVIEW)               "Review"
  set content(GUESTBOOK)            "Sign Guestbook"
  set content(FEATUREREQUEST)       "Feature Request"
  set content(SUBSCRIBE)            "Subscribe to this page"

  set content(SOURCEFORGE)          "Scidb at SourceForge.net"

  set content(GUIDE_DOWNLOAD)       "Download"
  set content(GUIDE_SCREENSHOTS)    "Screenshots"
  set content(GUIDE_MOREINFO)       "More Info"
  set content(GUIDE_LINKS)          "Scidb Links"
  set content(GUIDE_WANTED)         "Wanted"
  set content(GUIDE_PROJECT)        "The Scidb Project"
  set content(GUIDE_RELEASEHISTORY) "Release History"
  set content(GUIDE_ROADMAP)        "Roadmap"

  set content(AUTODISPLAY)          "true"

  set subdir 0

  set content(ENGLISH)              "%%$content(FILENAME).html"
  set content(GERMAN)               "%%de/$content(FILENAME).html"

############################################
}

set content(ONLOAD) [string trim $content(ONLOAD)]
set content(ONLOAD) "onload=\"setCookie('lang', '$content(LANG)', 720);$content(ONLOAD)\""

# write .html file #########################

set fd [open "[lindex $argv 0]"]
chan configure $fd -encoding iso8859-1
chan configure stdout -encoding iso8859-1

while {[gets $fd line] >= 0} {
  set indicies [regexp -indices -inline -- {%[A-Z_]+%} $line]

  while {[llength $indicies]} {
    set i [lindex [lindex $indicies 0] 0]
    set k [lindex [lindex $indicies 0] 1]
    set section [string range $line [expr {$i + 1}] [expr {$k - 1}]]
    set line [string replace $line $i $k $content($section)]
    set indicies [regexp -indices -inline -- {%[A-Z]+%} $line]
  }

  if {$subdir} {
    foreach {rexp len} {{src=\"[a-z]+/} 5 {href=\"[a-z]+/} 6 {import \"[a-z]+/} 8} {
      set indicies [regexp -indices -inline -- $rexp $line]

      while {[llength $indicies]} {
        set i [expr {[lindex [lindex $indicies 0] 0] + $len}]
        set str [string range $line 0 [expr {$i - 1}]]
        append str "../"
        append str  [string range $line $i end]
        set line $str
        set indicies [regexp -indices -inline -- $rexp $line]
      }
    }
  }

  puts [string map {%% {}} $line]
}

close $fd

# vi:set ts=2 sw=2 et:
